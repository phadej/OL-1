=== INPUT ===================================================================
; We can LJT proof search for values

; value
(search ex (tuple (tuple) (tuple)))

; identity
(search id (-> @A A A))

; identity with different type
(search idPair (-> @A @B (tuple A B) (tuple A B)))

; pair functions
(search swap (-> @A @B (tuple A B) (tuple B A)))
(search fst (-> @A @B (tuple A B) A))
(search snd (-> @A @B (tuple A B) A))

; curry
(search curry (-> @A @B @C (-> (tuple A B) C) A B C))
(search uncurry (-> @A @B @C (-> A B C) (tuple A B) C))
curry

; bigger curry
(search curry3 (-> @A @B @C @D (-> (tuple A B C) D) A B C D))

; weird, to test last rule in LJT
(search weird (-> @A @B (-> (-> A A) B) B))
weird

=== PARSED 1 ================================================================
(search ex (tuple (tuple) (tuple)))

=== SEARCH ==================================================================
ex = ? : (tuple (tuple) (tuple))

=== FOUND ===================================================================
(tuple (tuple) (tuple))

=== PARSED 2 ================================================================
(search id (-> @A A A))

=== SEARCH ==================================================================
id = ? : (-> @A A A)

=== FOUND ===================================================================
(fn (@A a) a)

=== PARSED 3 ================================================================
(search idPair (-> @A @B (tuple A B) (tuple A B)))

=== SEARCH ==================================================================
idPair = ? : (-> @A @B (tuple A B) (tuple A B))

=== FOUND ===================================================================
(fn (@A @B ab) ab)

=== PARSED 4 ================================================================
(search swap (-> @A @B (tuple A B) (tuple B A)))

=== SEARCH ==================================================================
swap = ? : (-> @A @B (tuple A B) (tuple B A))

=== FOUND ===================================================================
(fn (@A @B ab) (split ab (a b) (tuple b a)))

=== PARSED 5 ================================================================
(search fst (-> @A @B (tuple A B) A))

=== SEARCH ==================================================================
fst = ? : (-> @A @B (tuple A B) A)

=== FOUND ===================================================================
(fn (@A @B ab) (split ab (a b) a))

=== PARSED 6 ================================================================
(search snd (-> @A @B (tuple A B) A))

=== SEARCH ==================================================================
snd = ? : (-> @A @B (tuple A B) A)

=== FOUND ===================================================================
(fn (@A @B ab) (split ab (a b) a))

=== PARSED 7 ================================================================
(search curry (-> @A @B @C (-> (tuple A B) C) A B C))

=== SEARCH ==================================================================
curry = ? : (-> @A @B @C (-> (tuple A B) C) A B C)

=== FOUND ===================================================================
(fn (@A @B @C abc a b) (abc (tuple a b)))

=== PARSED 8 ================================================================
(search uncurry (-> @A @B @C (-> A B C) (tuple A B) C))

=== SEARCH ==================================================================
uncurry = ? : (-> @A @B @C (-> A B C) (tuple A B) C)

=== FOUND ===================================================================
(fn (@A @B @C abc ab) (split ab (a b) (abc a b)))

=== PARSED 9 ================================================================
curry

=== EVALUATE ================================================================
curry

=== INFERRED ================================================================
curry

=== CHECKED TYPE ============================================================
(-> @A @B @C (-> (tuple A B) C) A B C)

=== EXPANDED ================================================================
(the (-> @A @B @C (-> (tuple A B) C) A B C)
     (fn (@A @B @C abc a b) (abc (tuple a b))))

=== EVALUATED VALUE =========================================================
(fn (@A @B @C (the (-> (tuple A B) C) abc) (the A a) (the B b))
    (abc (tuple a b)))

=== PARSED 10 ===============================================================
(search curry3 (-> @A @B @C @D (-> (tuple A B C) D) A B C D))

=== SEARCH ==================================================================
curry3 = ? : (-> @A @B @C @D (-> (tuple A B C) D) A B C D)

=== FOUND ===================================================================
(fn (@A @B @C @D abcd a b c) (abcd (tuple a b c)))

=== PARSED 11 ===============================================================
(search weird (-> @A @B (-> (-> A A) B) B))

=== SEARCH ==================================================================
weird = ? : (-> @A @B (-> (-> A A) B) B)

=== FOUND ===================================================================
(fn (@A @B aab) (aab (fn (a) a)))

=== PARSED 12 ===============================================================
weird

=== EVALUATE ================================================================
weird

=== INFERRED ================================================================
weird

=== CHECKED TYPE ============================================================
(-> @A @B (-> (-> A A) B) B)

=== EXPANDED ================================================================
(the (-> @A @B (-> (-> A A) B) B) (fn (@A @B aab) (aab (fn (a) a))))

=== EVALUATED VALUE =========================================================
(fn (@A @B (the (-> (-> A A) B) aab)) (aab (fn ((the A a)) a)))

